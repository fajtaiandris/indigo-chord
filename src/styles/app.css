@import '@fontsource/fira-mono';
@import '@fontsource/fusion-pixel-8px-proportional-kr';
@import 'colors.css';
@import 'utils.css';

:root {
  font-family: 'Fira Mono', monospace;

  --stack-space: 1em;
}

* {
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  margin: 0;
  background-color: var(--default);
  color: var(--default-foreground)
}

main {
  padding: 1rem;
  width: 100%;
  max-width: 1024px;
  margin: 0 auto;
}

button {
  --shadow-intensity: 0.7;
  --shadow-intensity-2: 0.8;
  --base-color: var(--almost-black);
  --base-color-darker: rgb(from var(--base-color) calc(r * var(--shadow-intensity)) calc(g * var(--shadow-intensity)) calc(b * var(--shadow-intensity)));
  --base-color-darkest: rgb(from var(--base-color) calc(r * var(--shadow-intensity-2)) calc(g * var(--shadow-intensity-2)) calc(b * var(--shadow-intensity-2)));
  --spacing: 7px;
  --inner-height: 30px;
  background: transparent;
  position: relative;
  z-index: 1;
  margin: var(--spacing) calc(var(--spacing) * 2) var(--spacing) calc(var(--spacing) * 2);
  font-size: calc(var(--inner-height) * 0.5);
  line-height: var(--inner-height);
  font-family: 'Fusion Pixel 8px Proportional KR', sans-serif;
  cursor: pointer;
  border: none;
  white-space: nowrap;
  color: var(--almost-white);
  transition: transform 100ms ease;
 
  /* background */
  &::before {
    content: "";
    position: absolute;
    background: linear-gradient(to top, var(--base-color-darker), var(--base-color-darkest));
    top: calc(var(--spacing) * -1);
    left: calc(var(--spacing) * -2);
    width: calc(100% + 4 * var(--spacing));
    height: calc(var(--inner-height) + 2 * var(--spacing));
    border-radius: 4px;
    border: 1px solid var(--almost-black);
    color: var(--almost-white);
    box-shadow: 2px 2px 10px var(--black);
    z-index: -1;
  }

  /* rounded inside */
  &::after {
    content: "";
    position: absolute;
    background: linear-gradient(to bottom, var(--base-color-darker), var(--base-color));
    border-radius: 40px;
    width: calc(100% + 2 * var(--spacing));
    height: var(--inner-height);
    top: calc(var(--inner-height) / - 2);
    left: calc(var(--spacing) * -1);
    z-index: -1;
  }

  &:active {
    transform: scale(0.9)
  }
}

button[data-state="on"] {
  --base-color: var(--primary);
  color: var(--primary-foreground);
}

.button--white {
  --base-color: var(--almost-white);
  color: var(--almost-black);
  --shadow-intensity: 0.8;
  --shadow-intensity-2: 0.9;
}

/* when presented on a flat surface */
.button--flat {
  &::before {
    box-shadow: none;
  }
}

aside[role="note"] {
  background-color: var(--contrast);
  width: 100%;
  padding: 1rem;
  font-size: 0.9rem;
  color: var(--default-foreground);
  border: var(--primary-highlight) 1px solid;
  box-shadow: 4px 4px 0px var(--primary);
  display: flex;
  gap: 0.5rem;
}

aside[role="note"]::before {
  content: "[i]";
  height: fit-content;
  font-size: 0.8rem;
  display: block;
  background-color: var(--primary);
  color: var(--primary-foreground);
  padding: 0.125rem 0.125rem;
  font-weight: bold;
}

aside[role="note"][data-variant="warning"] {
  border-color: var(--warning-highlight);
  box-shadow: 4px 4px 0px var(--warning);
}

aside[role="note"][data-variant="warning"]::before {
  content: "[!]";
  background-color: var(--warning);
  color: var(--warning-foreground);
}

section {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}